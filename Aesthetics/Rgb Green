local RunService = game:GetService("RunService")
local FPSContainer = workspace:WaitForChild("Const"):WaitForChild("Ignore")
local parts = {}

-- ðŸ§  Breathe-like hacker ripple in calm, slow rhythm
RunService.RenderStepped:Connect(function()
	local t = tick()

	for i, part in ipairs(parts) do
		local offset = i * 0.35 -- slower wave travel between parts
		local phase = math.sin(t * 2.5 + offset) -- slowed ripple speed

		local brightness = math.abs(phase) ^ 2.5 -- smooth breathing curve
		local transparency = 0.4 + (1 - brightness) * 0.5 -- subtle fade

		local color = Color3.fromRGB(
			math.floor(10 + brightness * 50),    -- dim red
			math.floor(180 + brightness * 75),   -- rich glowing green
			math.floor(20 + brightness * 30)     -- slight cool base
		)

		part.Color = color
		part.Transparency = transparency
		part.Material = Enum.Material.ForceField
	end
end)

-- Applies material + stores for coloring
local function handlePart(part)
	if part:IsA("BasePart") then
		pcall(function() part.TextureID = "" end)
		table.insert(parts, part)
	end
end

-- Handles full FPSArms folder
local function processFPSArms(folder)
	for _, descendant in ipairs(folder:GetDescendants()) do
		handlePart(descendant)
	end
	folder.DescendantAdded:Connect(handlePart)
end

-- Already exists? Process now
local existing = FPSContainer:FindFirstChild("FPSArms")
if existing then
	processFPSArms(existing)
end

-- Watch for when it's added later
FPSContainer.ChildAdded:Connect(function(child)
	if child.Name == "FPSArms" then
		processFPSArms(child)
	end
end)
