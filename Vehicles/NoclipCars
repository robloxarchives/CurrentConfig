-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- ATV toggle setup
local collisionToggle = false
local ClosestATV = nil

-- List of valid model identifiers (each subtable represents one type of model)
local VehicleIdentifiers = {
    {"Seat", "Plastics"},
    {"lights2", "lights3"},
}

-- Find the first model that matches any identifier set (no distance check)
local function GetFirstMatchingVehicle()
    for _, model in ipairs(Workspace:GetChildren()) do
        if model:IsA("Model") then
            for _, identifiers in ipairs(VehicleIdentifiers) do
                local allFound = true
                for _, partName in ipairs(identifiers) do
                    if not model:FindFirstChild(partName) then
                        allFound = false
                        break
                    end
                end
                if allFound then
                    return model -- Found a valid vehicle, return it immediately
                end
            end
        end
    end
    return nil
end

-- Toggle collision for the first matching model
local function toggleVehicleCollision()
    ClosestATV = GetFirstMatchingVehicle()
    if not ClosestATV then return end

    collisionToggle = not collisionToggle
    for _, part in ipairs(ClosestATV:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = collisionToggle
        end
    end
    print("Vehicle Collision Toggled:", collisionToggle)
end

-- Keybind listener for "T" key
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.J then
        toggleVehicleCollision()
    end
end)
